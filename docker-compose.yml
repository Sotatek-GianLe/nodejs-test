version: "3.5"
services:
  web:
    build:
      context: ./web-view
      dockerfile: Dockerfile
      target: development
    ports:
      - "127.0.0.1:4500:4500"
    networks:
      - bridge-network
    command: sh -c "npm run start"

  orders:
    build:
      context: ./api/order
      dockerfile: Dockerfile
      target: development
    command: sh -c "npm run start:dev order"
    ports:
      - "127.0.0.1:3000:3000"
    restart: always
    networks:
      - bridge-network
    depends_on:
      - order-db
      - payment
      - redis

  payment:
    build:
      context: ./api/payment
      dockerfile: Dockerfile
      target: development
    command: sh -c "npm run start:dev payment"
    ports:
      - "127.0.0.1:3001:3001"
    restart: always
    networks:
      - bridge-network
    depends_on:
      - payment-db
      - redis

  order_db:
    image: mysql:5.7.22
    container_name: order_db
    ports:
      - "127.0.0.1:4306:3306"
    volumes:
      - ./mysql/order:/var/lib/mysql
    environment:
      MYSQL_DATABASE: order
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
      TZ: "Asia/Tokyo"
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - bridge-network

  payment-db:
    image: mysql:5.7.22
    container_name: payment_db
    ports:
      - "127.0.0.1:4307:3306"
    volumes:
      - ./mysql/payment:/var/lib/mysql
    environment:
      MYSQL_DATABASE: payment
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
      TZ: "Asia/Tokyo"
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - bridge-network

  redis:
    container_name: app_redis
    build:
      context: ./redis
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - bridge-network

networks:
  bridge-network:
    driver: bridge
